#!/usr/bin/php
<?php
// # Original von https://gist.github.com/ZARk-be/633e7f76d58d9dc32e18350c4002612e

// Convert dkim-keys file generated by froxlor to opendkim standard
// Version 2023-02-05 by ZARk

// File paths
$dkimKeysConfFile = "/etc/postfix/dkim/dkim-keys.conf";
$signTableFile = "/etc/postfix/dkim/SignTable";
$keyTableFile = "/etc/postfix/dkim/KeyTable";

// Owner and group for private key files
$privateKeyFileOwner = "opendkim";
$privateKeyFileGroup = "opendkim";

// Read file contents into an array
$dkimKeysConf = preg_split("/\r\n|\n|\r/", file_get_contents($dkimKeysConfFile));

// Initialize sign and key table strings
$signTable = "";
$keyTable = "";
$i = 0;
// Loop through each entry in dkim-keys.conf
foreach ($dkimKeysConf as $line) {
    if ($line == "") {
        continue;
    }

    // Split the line into parts
    $parts = explode(':', $line);
    $domain = $parts[1];
    $selector = str_replace('.priv', '', basename($parts[2]));
    $privateKeyFile = $parts[2];

    // Build sign table entry
    $signTable .= "*@" . $domain . " " . $selector . "._domainkey." . $domain;

    // Build key table entry
    $keyTable .= $selector . "._domainkey." . $domain . " " . $domain . ":" . $selector . ":" . $privateKeyFile;

    // Add newlines
    $signTable .= PHP_EOL;
    $keyTable .= PHP_EOL;
    // Change owner and group of private key files
    chown($privateKeyFile, $privateKeyFileOwner);
    chgrp($privateKeyFile, $privateKeyFileGroup);
    $i++;
}

// Write sign table and key table to their respective files
file_put_contents($signTableFile, $signTable);
file_put_contents($keyTableFile, $keyTable);

echo "processed $i records" . PHP_EOL;
